// <auto-generated />
using System;
using GS.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GS.Server.Migrations
{
    [DbContext(typeof(GSContext))]
    [Migration("20230316145304_Initial_Migration")]
    partial class Initial_Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GS.Shared.Note", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Note", (string)null);
                });

            modelBuilder.Entity("GS.Shared.Trackable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("InsuranceExpiry")
                        .HasColumnType("date");

                    b.Property<string>("InternalIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationExpiry")
                        .HasColumnType("date");

                    b.Property<int>("TrackableColorId")
                        .HasColumnType("int");

                    b.Property<string>("TrackableMake")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackableModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackableTrimLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrackableYearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrackableColorId");

                    b.HasIndex("TrackableYearId");

                    b.ToTable("Trackable", (string)null);
                });

            modelBuilder.Entity("GS.Shared.TrackableColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrackableColor", (string)null);
                });

            modelBuilder.Entity("GS.Shared.TrackableYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrackableYear", (string)null);
                });

            modelBuilder.Entity("GS.Shared.WorkOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InitialIssue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrackableId")
                        .HasColumnType("int");

                    b.Property<string>("WorkCompleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("WorkOrderCost")
                        .HasPrecision(2)
                        .HasColumnType("money");

                    b.Property<decimal?>("WorkOrderLaborCost")
                        .HasPrecision(2)
                        .HasColumnType("money");

                    b.Property<decimal?>("WorkOrderPartsCost")
                        .HasPrecision(2)
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("TrackableId");

                    b.ToTable("WorkOrder", (string)null);
                });

            modelBuilder.Entity("GS.Shared.Note", b =>
                {
                    b.HasOne("GS.Shared.WorkOrder", "WorkOrder")
                        .WithMany("Notes")
                        .HasForeignKey("WorkOrderId");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("GS.Shared.Trackable", b =>
                {
                    b.HasOne("GS.Shared.TrackableColor", "TrackableColor")
                        .WithMany("Trackables")
                        .HasForeignKey("TrackableColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GS.Shared.TrackableYear", "TrackableYear")
                        .WithMany("Trackables")
                        .HasForeignKey("TrackableYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrackableColor");

                    b.Navigation("TrackableYear");
                });

            modelBuilder.Entity("GS.Shared.WorkOrder", b =>
                {
                    b.HasOne("GS.Shared.Trackable", "Trackable")
                        .WithMany("WorkOrders")
                        .HasForeignKey("TrackableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trackable");
                });

            modelBuilder.Entity("GS.Shared.Trackable", b =>
                {
                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("GS.Shared.TrackableColor", b =>
                {
                    b.Navigation("Trackables");
                });

            modelBuilder.Entity("GS.Shared.TrackableYear", b =>
                {
                    b.Navigation("Trackables");
                });

            modelBuilder.Entity("GS.Shared.WorkOrder", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
